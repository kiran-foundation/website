---
import Layout from "../../layouts/Layout.astro";
---

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<Layout>
  <section class="container donation-form py-[120px]">
    <form
      id="donation-form"
      class="needs-validation container position-relative z-2 pt-5 pb-lg-5 pb-md-4 pb-2"
      novalidate
    >
      <div class="row">
        <div
          class="col-lg-8 custom-scroll"
          style="overflow: auto; height: 77vh;"
        >
          <h1 class="h2 pb-4">Donor Information</h1>
          <div class="row g-4 pb-4 pb-md-5 mb-3 mb-md-1">
            <div class="col-sm-6">
              <label class="form-label fs-base" for="name">Full Name</label>
              <input
                class="form-control form-control-lg"
                type="text"
                placeholder="Your full name"
                required
                id="name"
              />
            </div>
            <div class="col-sm-6">
              <label class="form-label fs-base" for="email">Email</label>
              <input
                class="form-control form-control-lg"
                type="email"
                placeholder="Email address"
                required
                id="email"
              />
            </div>
            <div class="col-sm-6">
              <label class="form-label fs-base" for="phone">Phone</label>
              <input
                class="form-control form-control-lg"
                type="tel"
                placeholder="Phone number"
                required
                id="phone"
              />
            </div>
            <div class="col-sm-6">
              <label class="form-label fs-base" for="country">Country</label>
              <input
                class="form-control form-control-lg"
                type="text"
                placeholder="Country"
                required
                id="country"
                value="India"
                readonly
              />
            </div>
            <div class="col-12">
              <label class="form-label fs-base" for="address">Address</label>
              <input
                class="form-control form-control-lg"
                type="text"
                placeholder="Address"
                required
                id="address"
              />
            </div>
            <div class="col-sm-6">
              <label class="form-label fs-base" for="city">City</label>
              <input
                class="form-control form-control-lg"
                type="text"
                placeholder="City"
                required
                id="city"
              />
            </div>
            <div class="col-sm-6">
              <label class="form-label fs-base" for="zipcode">Pin Code</label>
              <input
                class="form-control form-control-lg"
                type="text"
                placeholder="Pin code"
                required
                id="zipcode"
              />
            </div>

            <div class="col-12">
              <label class="form-label fs-base" for="notes"
                >Order Notes (Optional)</label
              >
              <textarea
                class="form-control form-control-lg"
                style="height: 150px;"
                placeholder="Additional notes"
                id="notes"></textarea>
            </div>
          </div>
        </div>

        <div
          class="col pt-5"
          style="min-width: 19rem; justify-content: center; align-items: center;"
        >
          <div
            class="card py-lg-4"
            id="donate-now-button"
            style="background-color:#feeeea;"
          >
            <div
              class="card-body w-100 mx-auto text-center"
              style="max-width: 23rem; background-color:#feeeea; color:black"
            >
              <h3 class="">Total Help</h3>
              <div class="display-2" id="amountToDisplay">$72</div>
              <div class="opacity-70 mb-4" id="toBeDisplay">per month</div>
              <p class="opacity-70 mb-4 pb-4">
                Morbi et massa fames ac scelerisque sit commodo dignissim
                aucibus
              </p>
              <button class="btn text-light bg-primary w-100" type="button"
                >Continue to Donate</button
              >
            </div>
          </div>
        </div>
      </div>
    </form>
  </section>

  <script>
    declare var Razorpay: any;

    const urlParams = new URLSearchParams(window.location.search);
    const donationAmount =
      Number(urlParams.get("donationAmount")) ||
      Number(urlParams.get("customAmount")) ||
      Number(urlParams.get("amount")) ||
      0;
    const paymentType = String(urlParams.get("donationFrequency")) || "onetime";
    const plan_id = String(urlParams.get("plan_id"));

    (document.getElementById("amountToDisplay") as HTMLDivElement).innerHTML =
      "â‚¹" + donationAmount;
    if (paymentType === "onetime") {
      (document.getElementById("toBeDisplay") as HTMLDivElement).innerHTML = "";
    }

    async function initiatePayment() {
      const form = document.getElementById("donation-form") as HTMLFormElement;

      if (paymentType === "onetime") {
        if (!form.checkValidity()) {
          form.reportValidity();
          return;
        }

        const formData = {
          name: (document.getElementById("name") as HTMLInputElement).value,
          email: (document.getElementById("email") as HTMLInputElement).value,
          phone: (document.getElementById("phone") as HTMLInputElement).value,
          country: (document.getElementById("country") as HTMLInputElement)
            .value,
          city: (document.getElementById("city") as HTMLInputElement).value,
          zipcode: (document.getElementById("zipcode") as HTMLInputElement)
            .value,
          address: (document.getElementById("address") as HTMLInputElement)
            .value,
          notes: {
            additional_notes: (
              document.getElementById("notes") as HTMLTextAreaElement
            ).value,
            city: (document.getElementById("city") as HTMLInputElement).value,
            zipcode: (document.getElementById("zipcode") as HTMLInputElement)
              .value,
            address: (document.getElementById("address") as HTMLInputElement)
              .value,
          },
          amount: donationAmount * 100,
          currency: "INR",
        };

        console.log(formData);

        try {
          // const response = await fetch("http://localhost:3000/create-order", {
          // const response = await fetch("http://localhost:3000/create-order", {
          const response = await fetch(
            "https://donation-backend-five.vercel.app/create-order",
            {
              method: "post",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(formData),
            }
          );

          const data = await response.json();

          if (!response.ok) {
            throw new Error(data.message || "Payment initiation failed");
          }

          const options = {
            key: "rzp_test_HmglXnBOLh8qwp", // Replace with Razorpay Key ID
            amount: formData.amount,
            currency: "INR",
            name: "Kiran Foundations",
            description: "Donation",
            image: "https://kfastro.netlify.app/favicon.ico",
            order_id: data.orderId,
            handler: function (response: any) {
              alert("Payment Successful!");
              console.log("Payment ID:", response.razorpay_payment_id);
              form.reset();
            },
            prefill: {
              name: formData.name,
              email: formData.email,
              contact: formData.phone,
            },
            notes: formData.notes, // Pass notes to Razorpay
            theme: {
              color: "#3399cc",
            },
          };

          const rzp = new Razorpay(options);
          rzp.open();
        } catch (error) {
          console.error("Error initiating payment:", error);
          alert("Payment initiation failed. Please try again.");
        }
      } else {
        if (!form.checkValidity()) {
          form.reportValidity();
          return;
        }

        const formData = {
          name: (document.getElementById("name") as HTMLInputElement).value,
          email: (document.getElementById("email") as HTMLInputElement).value,
          phone: (document.getElementById("phone") as HTMLInputElement).value,
          country: (document.getElementById("country") as HTMLInputElement)
            .value,
          city: (document.getElementById("city") as HTMLInputElement).value,
          zipcode: (document.getElementById("zipcode") as HTMLInputElement)
            .value,
          address: (document.getElementById("address") as HTMLInputElement)
            .value,
          notes: {
            additional_notes: (
              document.getElementById("notes") as HTMLTextAreaElement
            ).value,
            city: (document.getElementById("city") as HTMLInputElement).value,
            zipcode: (document.getElementById("zipcode") as HTMLInputElement)
              .value,
            address: (document.getElementById("address") as HTMLInputElement)
              .value,
          },
          amount: donationAmount * 100,
          currency: "INR",
          plan_id: plan_id,
        };

        try {
          // const response = await fetch("http://localhost:3000/create-subscription",{
          const response = await fetch(
            "https://donation-backend-five.vercel.app/create-subscription",
            {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(formData),
            }
          );

          const data = await response.json();

          if (!response.ok) {
            throw new Error(data.message || "Payment initiation failed");
          }

          const options = {
            key: "rzp_test_HmglXnBOLh8qwp", // Razorpay Key ID
            subscription_id: data.subscription_id, // Subscription ID generated by backend
            name: "Kiran Foundation",
            description: "Subscription for Premier Support",
            image: "https://kfastro.netlify.app/favicon.ico",
            handler: function (response) {
              alert("Subscription Successful!");
              console.log("Payment ID:", response.razorpay_payment_id);
              console.log(
                "Subscription ID:",
                response.razorpay_subscription_id
              );
              form.reset();
            },
            prefill: {
              name: formData.name,
              email: formData.email,
              contact: formData.phone,
            },
            theme: {
              color: "#3399cc",
            },
          };

          const rzp = new Razorpay(options);
          rzp.open();
        } catch (error) {
          console.error("Error initiating payment:", error);
          alert("Payment initiation failed. Please try again.");
        }
      }
    }

    document
      .getElementById("donate-now-button")
      .addEventListener("click", function (e) {
        e.preventDefault();
        initiatePayment();
      });
  </script>
</Layout>
