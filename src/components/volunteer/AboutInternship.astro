---
import type { MarkdownFile } from "../../types/Markdown";
import { remark } from "remark";
import html from "remark-html";
import VolunteerComponent from "../../components/volunteer/VolunteerComponent.astro";

const roleFile = import.meta.glob<MarkdownFile>(
  "/src/content/work/internship/*.md"
);
const staticTextsFile = import.meta.glob<MarkdownFile>(
  "/src/content/work/static-text.md"
);

const role = await (async () => {
  const volunteerPath = `/src/content/work/internship/${Astro.props.path}.md`;
  const volunteer = roleFile[volunteerPath];

  if (volunteer) {
    const { frontmatter, default: content } = await volunteer();
    const processedContent = await remark().use(html).process(content);
    return { ...frontmatter, content: processedContent.toString() };
  } else {
    return null;
  }
})();

if (!role) {
  console.warn(
    "Role not found for path:",
    `/src/content/work/internship/${Astro.props.path}.md`
  );
  // FIXME: Later
  // throw new Error('Role not found');
  // console.warn("Role not found")
}

const staticTexts = await (async () => {
  const staticFilePath = Object.keys(staticTextsFile)[0];
  const staticFile = staticTextsFile[staticFilePath];

  if (staticFile) {
    const { frontmatter } = await staticFile();
    return frontmatter;
  } else {
    return null;
  }
})();

if (!staticTexts) {
  console.warn("Static texts not found");
  // FIXME: Later
  // throw new Error('Static texts not found');
}

/* FIXME:
const {
  title,
  about,
  startDate,
  duration,
  timeCommitment,
  teamSize,
  responsibilities,
  requirements
} = role;

*/

const {
  title = "Title not found",
  quote = "Quote not found",
  about = "About information not available",
  startDate = "Start date not provided",
  roleType = "Role type not specified",
  duration = "Duration not specified",
  timeCommitment = "Time commitment not mentioned",
  teamSize = "Team size not defined",
  responsibilities = "",
  requirements = "",
  impact = "",
} = role || {};

/* FIXME:
const {
  applyNow,
  responsibilitiesHeading,
  requirementsHeading
} = staticTexts;

*/

const {
  applyNow = "Apply Now",
  responsibilitiesHeading = "Responsibilities",
  requirementsHeading = "Requirements",
} = staticTexts || {};
---

<div class="aboutVolunteering-frame1">
  <div class="aboutVolunteering-frame2">
    <h1>{title}</h1>
    <h3>{quote}</h3>
  </div>
  <p class="aboutVolunteering-info-text">
    <span>üóìÔ∏è Start Date:</span>
    {startDate}
    <br />
    <span>üíº Role Type: </span>
    {roleType}
    <br />
    <span>üìÖ Duration:</span>
    {duration}
    <br />
    <span>‚è≥ Time Commitment:</span>
    {timeCommitment}
    <br />
    <span>üë• Team Size:</span>
    {teamSize + " Volunteers"}
  </p>
  <!-- TODO: after this, one component for what you'll do and one component for who you are and why volunteer ? -->
  <div class="aboutVolunteering-frame3">
    <div class="aboutVolunteering-frame5">What You'll Do</div>
    <p>
      <span>üåü Impact:</span>
      {impact}
    </p>
    <div class="aboutVolunteering-frame4">
      <VolunteerComponent
        path={Astro.props.path}
        name="responsibilities"
        title="üóíÔ∏è Responsibilities"
      />
    </div>
    <div class="aboutVolunteering-frame4">
      <div class="aboutVolunteering-frame5">Who You Are</div>
      <VolunteerComponent
        path={Astro.props.path}
        name="requirements"
        title="‚úÖ Requirements"
      />
    </div>
    <div class="aboutVolunteering-frame4">
      <div class="aboutVolunteering-frame5">Why Volunteer?</div>

      <VolunteerComponent
        path={Astro.props.path}
        name="benefits"
        title="üéÅ Benefits"
      />
    </div>
  </div>
</div>
