---
import type { MarkdownFile } from "../../types/Markdown";
import { remark } from "remark";
import html from "remark-html";

const roleFile = import.meta.glob<MarkdownFile>(
  "/src/content/work/{internship/*.md,default-content.md}"
);

const role = await (async () => {
  const volunteerPath = `/src/content/work/internship/${Astro.props.path}.md`;
  const volunteer = roleFile[volunteerPath];

  if (volunteer) {
    const { frontmatter, default: content } = await volunteer();
    const processedContent = await remark().use(html).process(content);
    return { ...frontmatter, content: processedContent.toString() };
  } else {
    return null;
  }
})();

const defaultRole = await (async () => {
  const volunteerPath = "/src/content/work/default-content.md";
  const volunteer = roleFile[volunteerPath];

  if (volunteer) {
    const { frontmatter, default: content } = await volunteer();
    const processedContent = await remark().use(html).process(content);
    return { ...frontmatter, content: processedContent.toString() };
  } else {
    return null;
  }
})();

if (!role) {
  console.warn(
    "Role not found for path:",
    `/src/content/work/internship/${Astro.props.path}.md`
  );
}

const roleKey = Astro.props.name;
const roleValue = role[roleKey] ?? defaultRole[roleKey];
---

<h2>{Astro.props.title}:</h2>
{
  roleValue ? (
    <ul
      class="volunteer-list-disc"
      style="list-style-type: disc; padding-left: 1.5rem;"
    >
      {roleValue
        .split("\n")
        .map((line) => (line.trim() !== "" ? <li>{line}</li> : null))}
    </ul>
  ) : (
    <p>Information not available</p>
  )
}
