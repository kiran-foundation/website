---
import type { MarkdownFile } from "../../types/Markdown";
import Breadcrumb from "../common/Breadcrumb.astro";
import UpdateContent from "./UpdateContent.astro";
import ImportantUpdates from "./ImportantUpdates.astro";
import UpdateRelatedArticles from "./UpdateRelatedArticles.astro";
import UpdateGallery from "./UpdateGallery.astro";
// Import all Markdown files from the updates directory
const { path } = Astro.props;
const updateFile = import.meta.glob<MarkdownFile>("/src/content/updates/*.md");

// Fetch the specific Markdown file based on the path passed in the props
const update = await (async () => {
  if (!path) {
    console.warn("Path is undefined");
    return null;
  }

  // Construct the path to the Markdown file
  const updatePath = `/src/content/updates/${Astro.props.path}.md`;
  const updt = updateFile[updatePath];

  if (updt) {
    // Extract frontmatter and content
    const { frontmatter } = await updt();
    return { ...frontmatter };
  } else {
    return null;
  }
})();

const { title, summary, date, priority, featured_image, link, content } =
  update || {};
---

<div class="page-wrapper w-full relative">
  <div class="w-full flex justify-center">
    <div class="w-full max-w-7xl px-4">
      <div class="flex flex-col md:flex-row gap-6 relative">
        <div class="flex-1">
          <Breadcrumb />
          <UpdateContent path={path} />
        </div>

        <div class="hidden md:block w-1/3 pl-[120px]">
          <div class="absolute" id="important-updates-wrapper">
            <ImportantUpdates title={title} />
          </div>
        </div>
      </div>

      <div>
        <UpdateGallery path={path} />
      </div>

      <div class="mt-10 w-full pl-8 pt-[164px]">
        <UpdateRelatedArticles title={title} />
      </div>
    </div>
  </div>
</div>

<script is:inline>
  window.addEventListener("load", () => {
    const meta = document.getElementById("update-meta");
    const updates = document.getElementById("important-updates-wrapper");

    if (meta && updates) {
      const top = meta.offsetTop;
      updates.style.top = `${top + 47}px`;
    }
  });
</script>
