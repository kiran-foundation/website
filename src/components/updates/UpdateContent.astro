---
const { path } = Astro.props;
import { getEntry } from "astro:content";
const componentContent = (await getEntry("updates", path)).data;
import Button from "../common/button.astro";
---

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const currentUrl = encodeURIComponent(window.location.href);
    const messageText =
      "Hey , check out this super duper cool update from kiran foundation";

    const shareLinks = {
      facebook: `https://www.facebook.com/sharer/sharer.php?u=${currentUrl}`,
      telegram: `https://t.me/share/url?url=${currentUrl}&text=${messageText}`,
      linkedin: `https://www.linkedin.com/sharing/share-offsite/?url=${currentUrl}`,
      twitter: `https://x.com/intent/tweet?url=${currentUrl}&text=${messageText}`,
    };

    for (const [id, url] of Object.entries(shareLinks)) {
      const el = document.getElementById(`${id}-share`);
      if (el) el.setAttribute("href", url);
    }
  });
</script>

<div>
  <div
    class="gap-[10px] px-6 lg:px-8 max-w-[81rem] text-[1rem] font-normal leading-[100%] font-poppins mx-auto my-8"
  >
    <div>
      <div class="heading-1">
        {componentContent.title}
      </div>
      <div id="update-meta" class="flex justify-between pt-[48px]">
        <div>
          Date: {componentContent.date}
        </div>
        <div>
          Share post:

          <a
            class="pl-[4px]"
            id="facebook-share"
            aria-label="Facebook"
            target="_blank"
            href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(Astro.request.url)}`}
            rel="noopener noreferrer"
          >
            <i class="ai-facebook"></i>
          </a>

          <a
            class="pl-[4px]"
            id="telegram-share"
            href={`https://t.me/share/url?url=${encodeURIComponent(Astro.request.url)}&text=${encodeURIComponent(componentContent.message_text)}`}
            aria-label="Telegram"
            target="_blank"
            rel="noopener noreferrer"
          >
            <i class="ai-telegram"></i>
          </a>

          <a
            class="pl-[4px]"
            id="linkedin-share"
            aria-label="LinkedIn"
            target="_blank"
            href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(Astro.request.url)}`}
            rel="noopener noreferrer"
          >
            <i class="ai-linkedin"></i>
          </a>

          <a
            class="pl-[4px]"
            id="twitter-share"
            aria-label="Twitter"
            target="_blank"
            href={`https://x.com/intent/tweet?url=${encodeURIComponent(Astro.request.url)}&text=${encodeURIComponent(componentContent.message_text)}`}
            rel="noopener noreferrer"
          >
            <i class="ai-x"></i>
          </a>
        </div>
      </div>
    </div>
    <!-- content div -->

    <div class="updateFocus-content" style="padding-top: 120px;">
      <!-- main text -->
      {
        componentContent.content && componentContent.content.map && (
          <div class="body-text-1">
            {componentContent.content.map((item) => (
              <div set:html={item} />
            ))}
          </div>
        )
      }

      {
        componentContent.details && (
          <div class="body-text-1">
            {componentContent.details.map((item) => (
              <div set:html={item} />
            ))}
          </div>
        )
      }

      {
        componentContent.main_button_title && (
          <div class="pt-[48px] pb-[40px]">
            <div class="flex gap-4">
              {/* Primary button */}
              <Button
                btn="btn1"
                widthClass={
                  componentContent.secondary_button_title
                    ? "w-auto"
                    : "w-[247px]"
                }
                heightClass={
                  componentContent.secondary_button_title
                    ? "h-auto"
                    : "h-[60px]"
                }
                title={componentContent.main_button_title}
                link={componentContent.main_button_link}
              />

              {/* Secondary button */}
              {componentContent.secondary_button_title && (
                <Button
                  btn="btn3"
                  title={componentContent.secondary_button_title}
                  link={componentContent.secondary_button_link}
                />
              )}
            </div>
          </div>
        )
      }

      {/* image */}
      {
        componentContent.featured_image && (
          <>
            <div class="h-auto w-full pt-[80px]">
              <img
                src={componentContent.featured_image}
                alt={componentContent.alt}
                class="w-full h-full"
                loading="lazy"
              />
            </div>
            <p class="Error-text" style="padding-top: 16px;">
              {componentContent.alt}
            </p>
          </>
        )
      }
      <div>
        {
          componentContent.video_link && (
            <>
              <div class="heading-3 pt-[164px] pb-[96px]">
                Recording of event
              </div>
              {/* video */}
              <div class="h-auto w-full">
                <iframe
                  width="100%"
                  height="500"
                  src={`https://www.youtube.com/embed/${componentContent.video_link.split("v=")[1]}`}
                  title="YouTube video player"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                  allowfullscreen
                />
              </div>
              <p class="font-poppins font-bold text-[20px] leading-[100%] tracking-[0%] pt-[32px] text-[#1E1E1E]">
                {componentContent.video_description}
              </p>
            </>
          )
        }
      </div>

      {/* secondary text */}
      {
        componentContent.information && (
          <div class="body-text-1">
            {componentContent.information.map((item) => (
              <div set:html={item} />
            ))}
          </div>
        )
      }
    </div>
  </div>
</div>
